.type ID
.type L

.decl Block(i1: ID, i2: ID)
.input Block
.decl JumpKind(i1: ID)
.input JumpKind
.decl Lbl(i1: ID, l1: L)
.input Lbl

.decl BlockSucc(i1: ID, i2: ID)
.output BlockSucc

BlockSucc(i7, i0) :- Lbl(i2, l1), Lbl(i0, l1), Block(i0, i4), JumpKind(i2), Block(i7, i2).

